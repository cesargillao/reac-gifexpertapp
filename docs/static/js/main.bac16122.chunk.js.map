{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGift","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAiB/C,OACG,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAC,OAAKP,GAAL,mBAAoBO,OAEnCN,EAAc,MAKjB,SACG,uBACGO,KAAK,OACLC,MAAQT,EACRU,SAlBiB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCRhBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,8DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATpB,kBAabM,GAba,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACG,sBAAKc,UAAU,2DAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCFDO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EACfd,mBAAS,CAChCqB,KAAM,GACNa,SAAS,IAH6B,mBAClCC,EADkC,KAC3BC,EAD2B,KAkBzC,OAZAC,qBAAU,WACPxB,EAASC,GACLwB,MAAK,SAAAC,GAEHH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAIlB,CAACpB,IAEGqB,EDP0BK,CAAc1B,GAAlCa,EATyB,EAS9BN,KAAaa,EATiB,EASjBA,QAGrB,OACG,qCACG,6BAAMpB,IACJoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEYhBgB,EAjCM,WAAM,MAOYzC,mBAAS,CAAC,cAPtB,mBAOjB0C,EAPiB,KAOL3C,EAPK,KAexB,OACG,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAEG2C,EAAWnB,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEGA,SAAWA,GADLA,U,MCtBxB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bac16122.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n   const [inputValue, setInputValue] = useState('');\r\n\r\n   const handleInputChange = (e) => {\r\n      setInputValue(e.target.value);\r\n   }\r\n\r\n   const hanldleSubmit = (e) => {\r\n      e.preventDefault();\r\n      if (inputValue.trim().length > 2) {\r\n         setCategories(c => [inputValue, ...c]);\r\n         // console.log('Submit Hecho');\r\n         setInputValue('');\r\n      }\r\n   }\r\n\r\n   return (\r\n      <form onSubmit={ hanldleSubmit }>\r\n         <input\r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n         />\r\n      </form>\r\n   )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async ( category ) => {\r\n   const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=6&api_key=LbRocZACHhKPfAytdeu48KtOvDFmom7A`;\r\n   const resp = await fetch(url);\r\n   const { data } = await resp.json();\r\n\r\n   const gifs = data.map(img => {\r\n      return {\r\n         id: img.id,\r\n         title: img.title,\r\n         url: img.images?.downsized_medium.url\r\n      }\r\n   });\r\n   \r\n   return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n   return (\r\n      <div className=\"card animate__animated animate__fadeIn animate__delay-2s\">\r\n         <img src={ url } alt={ title } />\r\n         <p>{ title }</p>\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGift } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   // const [images, setImages] = useState([]);\r\n\r\n   // useEffect(() => {\r\n   //    getGifs( category )\r\n   //       .then( setImages );\r\n   // }, [ category ]);\r\n\r\n   const { data:images, loading } = useFetchGift( category );\r\n   // console.log(state);\r\n\r\n   return (\r\n      <>\r\n         <h3>{ category }</h3>\r\n         { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n         <div className=\"card-grid\">\r\n            {\r\n               images.map(img => (\r\n                  <GifGridItem\r\n                     key={ img.id }\r\n                     { ...img }\r\n                  />\r\n               ))\r\n            } \r\n         </div>\r\n      </>\r\n   )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGift = ( category ) => {\r\n   const [state, setState] = useState({\r\n      data: [],\r\n      loading: true\r\n   });\r\n\r\n   useEffect(() => {\r\n      getGifs( category )\r\n         .then(imgs => {\r\n\r\n            setState({\r\n               data: imgs,\r\n               loading: false\r\n            })\r\n\r\n         })\r\n   }, [category]);\r\n\r\n   return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n   // const categories = [\r\n   //    'One Punch',\r\n   //    'Samurai X',\r\n   //    'Dragon Ball'\r\n   // ];\r\n\r\n   const [categories, setCategories] = useState(['One Punch']);\r\n\r\n   // const handleAdd = () => {\r\n   //    setCategories([...categories, 'Naturo']);\r\n   //    // setCategories(['Naturo', ...categories]);\r\n   //    // setCategories(categories => [...categories, 'Naturo']);\r\n   // }\r\n\r\n   return (\r\n      <>\r\n         <h2>GifExpertApp</h2>\r\n         <AddCategory setCategories={ setCategories } />\r\n         {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n         <hr />\r\n         {\r\n            categories.map(category => (\r\n               <GifGrid \r\n                  key={ category }\r\n                  category={ category }\r\n               />\r\n            ))\r\n         }\r\n      </>\r\n   )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}